#!/usr/bin/env bash

#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4 # Use the super key as the main modifier
# xmodmap -pm
# xmodmap:  up to 4 keys per modifier, (keycodes in parentheses):

# shift       Shift_L (0x32)
# lock        F9 (0x4b)
# control     Control_L (0x42)
# mod1        Alt_L (0x85),  Alt_L (0xcc),  Meta_L (0xcd)
# mod2        Num_Lock (0x4d)
# mod3        ISO_Level5_Shift (0xcb)
# mod4        Super_L (0x40),  Super_R (0x86),  Super_L (0xce),  Hyper_L (0xcf)
# mod5        ISO_Level3_Shift (0x5c)
ALT=Mod1
CTRLO=Mod5 # original control key next to window key

# TERMINAL is defined in ~/.xprofile
# TERMINAL="$HOME/.local/bin/st"
REV_GOLDEN_RATIO=0.618  # 1/1.618
LEFT_GOLDEN_RATIO=0.382 # 2 - 1.618

SCREEN_WIDTH="2880"
SCREEN_HEIGHT="1800"

# REMOVE ALL EXISTING KEYBINDINGS #
#---------------------------------#
hc keyunbind --all

# System controls #
#-----------------#
hc keybind $Mod-Control-c spawn "$TERMINAL" -T logout -e ~/.local/bin/herbst-logout.sh
hc keybind $Mod-Control-r reload
hc keybind $Mod-q close_and_remove
# lock screen
hc keybind $Mod-Control-z spawn i3lock -i ~/Pictures/wallpapers/IMG_0581_1920_1080.PNG
# hc keybind $Mod-Control-z spawn xscreensaver-command -lock

# multimedia #
#------------#
hc keybind XF86MonBrightnessUp spawn xbacklight -inc 10
hc keybind XF86MonBrightnessDown spawn xbacklight -dec 10
hc keybind XF86AudioRaiseVolume spawn pactl set-sink-volume 0 +5%
hc keybind XF86AudioLowerVolume spawn pactl set-sink-volume 0 -5%
hc keybind XF86AudioMute spawn pactl set-sink-mute @DEFAULT_SINK@ toggle
# hc keybind XF86AudioPlay spawn playerctl play-pause
hc keybind $Mod-F11 spawn playerctl play-pause
# hc keybind XF86AudioNext spawn playerctl next
hc keybind $Mod-F12 spawn playerctl next
# hc keybind XF86AudioPrev spawn playerctl previous
hc keybind $Mod-F10 spawn playerctl previous
hc keybind $Mod-Shift-F11 spawn playerctl stop
# Volume and Mixer control
hc keybind $Mod-Control-v spawn ~/.local/bin/scratch2 Pavucontrol
hc keybind $Mod-Control-b spawn ~/.local/bin/scratch2 Blueman-manager

# programs #
# #--------#
# hc keybind $Mod-w spawn bgd
# Check youtube subscribers
# hc keybind $Mod-Control-y spawn ~/.local/scripts/ytsubs.sh
hc keybind $Mod-e spawn ~/.local/bin/reset_keymap.sh
# install to-do for Void or Debian linux
# hc keybind $Mod-Shift-t spawn ~/.local/bin/scratch Todo
hc keybind $Mod-Control-w spawn "$TERMINAL" -T windows -e ~/.local/bin/windows.sh
hc keybind $Mod-t spawn ~/.local/bin/urxvt.sh
hc keybind $Mod-Shift-t spawn ~/.local/bin/alacritty_tabbed.sh
hc keybind $Mod-w spawn wezterm
hc keybind $Mod-a spawn ~/.local/bin/st_tabbed.sh
hc keybind $Mod-Shift-a spawn ~/.local/bin/st
hc keybind $Mod-Shift-g spawn ~/.local/bin/conktoggle.sh
# hc keybind $Mod-Shift-m chain , use_index 4 , spawn thunderbird
hc keybind $Mod-z chain , use_index 7 , spawn ~/.local/bin/zoom.sh
hc keybind $Mod-Control-s spawn ~/.local/bin/screenkey_toggle.sh top medium

# run launchers #
#---------------#
hc keybind $Mod-Control-d spawn dmenu_run -p Launch: -fn "Inconsolata Nerd Font":size=14 -l 10 -nb '#222222' -sb '#007687' -sf '#222222' -nf '#b8b8b8'
hc keybind $Mod-Shift-r spawn rofi -matching fuzzy -show drun
# no package for rofi-emoji in Gentoo
# hc keybind $Mod-Control-e spawn rofi -show emoji
# Manage virtual machines
hc keybind $Mod-Control-m spawn "$TERMINAL" -T vmach.sh -e ~/.local/bin/vmach.sh
# Void linux package manager
# hc keybind $Mod-Shift-i spawn "$TERMINAL" -title vsp2 -e ~/.local/bin/vsp2
hc keybind $Mod-Shift-d spawn "$TERMINAL" -T launch.sh -e ~/.local/bin/launch.sh
hc keybind $Mod-Control-e spawn "$TERMINAL" -T configs -e ~/.local/bin/edit_configs.sh
hc keybind $Mod-Control-t spawn "$TERMINAL" -T themesel.sh -e ~/.local/bin/themesel.sh
hc keybind $Mod-Shift-s chain , use_index 5 , spawn slack
hc keybind $Mod-Shift-z chain , use_index 1 , spawn zotero
hc keybind $Mod-Shift-o chain , use_index 6 , spawn obsidian

# browsers #
#----------#
# hc keybind $Mod-b chain , use_index 2 , spawn brave-bin
hc keybind $Mod-b spawn brave-bin
hc keybind $Mod-Shift-q spawn ~/.local/bin/scratch2 qutebrowser
hc keybind $Mod-Shift-w spawn librewolf
hc keybind $Mod-Shift-v spawn vivaldi
hc keybind $Mod-Shift-x spawn opera
# hc keybind $Mod-Shift-n spawn nyxt

hc keybind Print spawn flameshot gui

# scratchpads #
#-------------#
hc keybind $Mod-$ALT-Return spawn ~/.local/bin/scratchpad
hc keybind $Mod-Return spawn ~/.local/bin/scpad2
# hc keybind $Mod-Shift-u spawn "$TERMINAL" -e lf
# hc keybind $Mod-Shift-a spawn "$TERMINAL" -e ranger
# hc keybind $Mod-Shift-a spawn "$TERMINAL" -title ranger -e ranger
hc keybind $Mod-n spawn ~/.local/bin/scratch Neomutt
# MPD client: ncmpcpp need to configured
# hc keybind $Mod-t spawn scratch Music
hc keybind $Mod-Shift-c spawn ~/.local/bin/scratch2 Qalculate-gtk
# Open Wezterm scratchpad but Not fully working
# This can be replaced by default scratch pad function.
hc keybind $Mod-comma spawn ~/.local/bin/scpad
hc keybind $Mod-Shift-p spawn ~/.local/bin/run_hwp.sh

hc keybind $Mod-d spawn ~/.local/bin/find_bookmark.sh
hc keybind $Mod-f spawn ~/.local/bin/find_bookmark_by_tag.sh
hc keybind $Mod-g spawn "$TERMINAL" -T Bookmark -e ~/.local/bin/add_bookmark.sh
hc keybind $Mod-s spawn ~/.local/bin/gen_web_search.sh

hc keybind $Mod-x spawn ~/.local/bin/find_command.sh
hc keybind $Mod-c spawn ~/.local/bin/find_command_by_tag.sh
hc keybind $Mod-v spawn "$TERMINAL" -T Bookmark -e ~/.local/bin/add_command.sh

# focusing client #
#-----------------#s
hc keybind $Mod-h focus left
hc keybind $Mod-j focus down
hc keybind $Mod-k focus up
hc keybind $Mod-l focus right

# moving clients in tiling and floating mode #
hc keybind $Mod-$ALT-Shift-j shift down
hc keybind $Mod-$ALT-Shift-k shift up
hc keybind $Mod-$ALT-Shift-l shift right
hc keybind $Mod-$ALT-Shift-h shift left

# splitting frames #
#------------------#
hc keybind $Mod-u chain , split bottom $REV_GOLDEN_RATIO , focus down
hc keybind $Mod-i chain , split top $LEFT_GOLDEN_RATIO , focus up
hc keybind $Mod-o chain , split right $REV_GOLDEN_RATIO , focus right
hc keybind $Mod-y chain , split left $LEFT_GOLDEN_RATIO , focus left

# let the current frame explode into subframes #
#----------------------------------------------#
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients #
#--------------------------------------#
resizestep=0.02
hc keybind $Mod-Control-Left resize left +$resizestep
hc keybind $Mod-Control-Down resize down +$resizestep
hc keybind $Mod-Control-Up resize up +$resizestep
hc keybind $Mod-Control-Right resize right +$resizestep

# tags #
#------#
#                             scratchpad
#                             |
#                             v
#   tag 1 2 3 4 5 6  7  8  9  0
# index 0 1 2 3 4 5  6  7  8  9
#   key 1 2 3 4 5 F1 F2 F3 F4 0
tag_names=({1..9})

hc rename default "${tag_names[0]}" || true
hc set default_frame_layout horizontal
hc set_layout horizontal

for i in "${!tag_names[@]}"; do
	hc add "${tag_names[$i]}"

	if [ "$i" -lt 5 ]; then
		key="${tag_names[$i]}"
	else
		key="F$((i - 4))"
	fi

	if [ -n "$key" ]; then
		hc keybind "$Mod-$key" use_index "$i"
		hc keybind "$Mod-Shift-$key" move_index "$i"
	fi
done

# For scratchpad
# scratchpad will be added by ~/.local/bin/scratchpad
hc keybind $Mod-backslash use_index 9
hc keybind $Mod-Shift-backslash move_index 9

# layouting #
#-----------#
hc keybind $Mod-Control-a spawn "$TERMINAL" -T newLayout -e ~/.local/bin/new-layout.sh
hc keybind $Mod-Control-x spawn "$TERMINAL" -T dual_monitor \
	-e ~/.screenlayout/dual_with_LG.sh
hc keybind $Mod-Shift-y spawn ~/.local/bin/load-layout.sh
hc keybind $Mod-r remove
hc keybind $Mod-Shift-f fullscreen toggle
hc keybind $Mod-Control-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space \
	or , and . compare tags.focus.curframe_wcount = 2 \
	. cycle_layout +1 vertical horizontal max vertical grid \
	, cycle_layout +1

# focus #
#-------#
hc keybind $Mod-BackSpace cycle_monitor
hc keybind $Mod-Tab cycle_all +1
hc keybind $Mod-Shift-Tab cycle_all -1
hc keybind $Mod-Control-i jumpto urgent

# MOUSE #
#-------#
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc keybind $Mod-9 spawn ~/.local/bin/mouse_drag.sh left_button right 20
hc keybind $Mod-6 spawn ~/.local/bin/mouse_drag.sh left_button left 20
hc keybind $Mod-7 spawn ~/.local/bin/mouse_drag.sh left_button down 20
hc keybind $Mod-8 spawn ~/.local/bin/mouse_drag.sh left_button up 20

# Resizes the window into all four directions
# while keeping the center of the window constant.
hc mousebind $Mod-Button2 zoom
hc keybind $Mod-F8 spawn ~/.local/bin/mouse_drag.sh middle_button right 20
hc keybind $Mod-F5 spawn ~/.local/bin/mouse_drag.sh middle_button left 20
hc keybind $Mod-F6 spawn ~/.local/bin/mouse_drag.sh middle_button down 20
hc keybind $Mod-F7 spawn ~/.local/bin/mouse_drag.sh middle_button up 20

hc mousebind $Mod-Button3 resize

hc keybind $Mod-$ALT-l spawn xdotool mousemove_relative --polar 90 50
hc keybind $Mod-$CTRLO-l spawn xdotool mousemove_relative --polar 90 20
hc keybind $Mod-$ALT-h spawn xdotool mousemove_relative --polar 270 50
hc keybind $Mod-$CTRLO-h spawn xdotool mousemove_relative --polar 270 20
hc keybind $Mod-$ALT-k spawn xdotool mousemove_relative --polar 0 50
hc keybind $Mod-$CTRLO-k spawn xdotool mousemove_relative --polar 0 20
hc keybind $Mod-$ALT-j spawn xdotool mousemove_relative --polar 180 50
hc keybind $Mod-$CTRLO-j spawn xdotool mousemove_relative --polar 180 20

hc keybind $Mod-Shift-l spawn xdotool mousemove $((SCREEN_WIDTH / 2 + SCREEN_WIDTH / 4)) $((SCREEN_HEIGHT / 4))
# north-west of the screen
hc keybind $Mod-Shift-h spawn xdotool mousemove $((SCREEN_WIDTH / 4)) $((SCREEN_HEIGHT / 4))
# south-east of the screen
hc keybind $Mod-Shift-k spawn xdotool mousemove $((SCREEN_WIDTH / 2 + SCREEN_WIDTH / 4)) $((SCREEN_HEIGHT / 2 + SCREEN_HEIGHT / 4))
# south-west of the screen
hc keybind $Mod-Shift-j spawn xdotool mousemove $((SCREEN_WIDTH / 4)) $((SCREEN_HEIGHT / 2 + SCREEN_HEIGHT / 4))
# center of the screen
hc keybind $Mod-Shift-u spawn xdotool mousemove $((SCREEN_WIDTH / 2)) $((SCREEN_HEIGHT / 2))

hc keybind $Mod-Delete spawn xdotool click --clearmodifiers 1    # left mouse button
hc keybind $Mod-Page_Up spawn xdotool click --clearmodifiers 1   # left mouse button
hc keybind $Mod-$ALT-n spawn xdotool click --clearmodifiers 1    # left mouse button
hc keybind $Mod-$CTRLO-n spawn xdotool click --clearmodifiers 1  # left mouse button
hc keybind $Mod-End spawn xdotool click --clearmodifiers 2       # middle mouse button
hc keybind $Mod-$ALT-m spawn xdotool click --clearmodifiers 2    # middle mouse button
hc keybind $Mod-$CTRLO-m spawn xdotool click --clearmodifiers 2  # middle mouse button
hc keybind $Mod-Page_Down spawn xdotool click --clearmodifiers 3 # right mouse button
hc keybind $Mod-$ALT-b spawn xdotool click --clearmodifiers 3    # right mouse button
hc keybind $Mod-$CTRLO-b spawn xdotool click --clearmodifiers 3  # right mouse button
# hc keybind $Mod-Control-k spawn xdotool click --clearmodifiers 4     # wheel up button
# hc keybind $Mod-Control-j spawn xdotool click --clearmodifiers 5     # wheel down button
hc keybind $ALT-k spawn xdotool click --clearmodifiers 4 # wheel up button
hc keybind $ALT-j spawn xdotool click --clearmodifiers 5 # wheel down button

hc keybind $Mod-Insert spawn xdotool mousedown 1
hc keybind $Mod-$ALT-v spawn xdotool mousedown 1
hc keybind $Mod-$CTRLO-v spawn xdotool mousedown 1
hc keybind $Mod-Home spawn xdotool mouseup 1
hc keybind $Mod-$ALT-c spawn xdotool mouseup 1
hc keybind $Mod-$CTRLO-c spawn xdotool mouseup 1

hc keybind $Mod-m spawn ~/.local/bin/delete_inputs.sh

# chain
hc keybind $Mod-Shift-e chain , split right $REV_GOLDEN_RATIO , focus right , \
	spawn ~/.local/bin/st_tabbed.sh
# place slack to right hand side and keep left blank for Youtube music.
hc keybind $Mod-Shift-m chain , use_index 5 , split right "$(awk "BEGIN {print 1 - $REV_GOLDEN_RATIO}")" , \
	shift right , focus left , use_index 2
